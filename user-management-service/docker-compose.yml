version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - "2181:2181"
    healthcheck:
      test: echo ruok | nc localhost 2181 || exit 1
      interval: 5s
      timeout: 10s
      retries: 10
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      zookeeper:
        condition: service_healthy
    volumes:
      - ./wait-for-service.sh:/wait-for-service.sh
    entrypoint: [ "/bin/sh", "-c", "/wait-for-service.sh zookeeper 2181 Zookeeper /etc/confluent/docker/run" ]

  user-db:
    image: mysql:8
    environment:
      MYSQL_ROOT_PASSWORD: Eshu@123
      MYSQL_DATABASE: user_management
    ports:
      - "3307:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "user-db"]
      interval: 10s
      timeout: 5s
      retries: 5

  journal-db:
    image: mysql:8
    environment:
      MYSQL_ROOT_PASSWORD: Eshu@123
      MYSQL_DATABASE: user_management
    ports:
      - "3308:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "journal-db"]
      interval: 10s
      timeout: 5s
      retries: 5

  user-management-service:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - user-db
      - kafka
    volumes:
      - ./wait-for-service.sh:/wait-for-service.sh
    entrypoint: [ "/bin/sh", "-c", "/wait-for-service.sh user-db 3306 MySQL java -jar app.jar" ]
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://user-db:3306/user_management
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: Eshu@123

  journal-consumer:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8081:8080"
    depends_on:
      - journal-db
      - kafka
    volumes:
      - ./wait-for-service.sh:/wait-for-service.sh
    entrypoint: [ "/bin/sh", "-c", "/wait-for-service.sh journal-db 3306 MySQL java -jar app.jar" ]
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://journal-db:3306/journal_db
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: Eshu@123
